swagger: "2.0"
info:
  title: Случайны лес API
  description: API подготовленное командой Случайный лес
  version: 1.0.0
basePath: /v1
paths:
  /client/:
    get:
      tags:
      - client
      description: get Client
      operationId: ClientController.Get All
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Client'
        "403":
          description: ""
  /client/{id}:
    get:
      tags:
      - client
      description: get Client by id
      operationId: ClientController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Client'
        "403":
          description: :id is empty
  /client/getbycompany/{id}:
    get:
      tags:
      - client
      description: get Client by id
      operationId: ClientController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Client'
        "403":
          description: :id is empty
  /client/getbynotcompany/{id}:
    get:
      tags:
      - client
      description: get Client by id
      operationId: ClientController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.NiceClient'
        "403":
          description: :id is empty
  /company/:
    get:
      tags:
      - company
      description: get Compani
      operationId: CompaniController.Get All
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Compani'
        "403":
          description: ""
  /company/{id}:
    get:
      tags:
      - company
      description: get Compani by id
      operationId: CompaniController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Compani'
        "403":
          description: :id is empty
  /event/{cid}/{type}:
    get:
      tags:
      - event
      description: get Event-Data by id
      operationId: EventDataController.GetOne
      parameters:
      - in: path
        name: cid
        description: The key for staticblock
        required: true
        type: string
      - in: path
        name: type
        description: Temp Humidity WindSpeed
        required: true
        type: string
      responses:
        "200":
          description: ""
        "403":
          description: ""
  /event/grid/{cid}:
    get:
      tags:
      - event
      description: get Event-Data by id
      operationId: EventDataController.GetOne
      parameters:
      - in: path
        name: cid
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
        "403":
          description: ""
  /user/login:
    post:
      tags:
      - user
      description: create User
      operationId: UserController.Post
      parameters:
      - in: body
        name: body
        description: body for User content
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.LoginGoodResponse'
        "403":
          description: body is empty
definitions:
  models.Client:
    title: Client
    type: object
    properties:
      Areas:
        type: integer
        format: int32
      AreasIot:
        type: integer
        format: int32
      CompanyID:
        type: integer
        format: int32
      Contacts:
        type: string
      DateEnd:
        type: string
        format: string
      DateStart:
        type: string
        format: string
      ID:
        type: integer
        format: int32
      IsAccedents:
        type: boolean
      Name:
        type: string
      Squares:
        type: integer
        format: int32
      Sum:
        type: number
        format: float
      Type:
        type: string
  models.Compani:
    title: Compani
    type: object
    properties:
      Address:
        type: string
      Description:
        type: string
      Email:
        type: string
      ID:
        type: integer
        format: int32
      Name:
        type: string
      Phone:
        type: string
      Rating:
        type: number
        format: float
  models.Login:
    title: Login
    type: object
    properties:
      Login:
        type: string
      PasswordHash:
        type: string
  models.LoginGoodResponse:
    title: LoginGoodResponse
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Status:
        type: integer
        format: int32
  models.NiceClient:
    title: NiceClient
    type: object
    properties:
      Areas:
        type: integer
        format: int32
      AreasIot:
        type: integer
        format: int32
      CompanyID:
        type: integer
        format: int32
      Contacts:
        type: string
      DateEnd:
        type: string
      DateStart:
        type: string
      ID:
        type: integer
        format: int32
      IsAccedents:
        type: boolean
      Name:
        type: string
      Squares:
        type: integer
        format: int32
      Sum:
        type: number
        format: float
      Type:
        type: string
tags:
- name: event
  description: |
    EventDataController API Для работы с событиями
- name: client
  description: |
    ClientController API для работы с клиентом
- name: company
  description: |
    CompaniController API Для работы с компаниями
- name: user
  description: |
    UserController API Для работы с авторизации
