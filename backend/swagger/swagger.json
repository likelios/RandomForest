{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/client/": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "get Client",
                "operationId": "ClientController.Get All",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Client"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/client/getbycompany/{id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "get Client by id",
                "operationId": "ClientController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Client"
                            }
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/client/getbynotcompany/{id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "get Client by id",
                "operationId": "ClientController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NiceClient"
                            }
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/client/{id}": {
            "get": {
                "tags": [
                    "client"
                ],
                "description": "get Client by id",
                "operationId": "ClientController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/company/": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "get Compani",
                "operationId": "CompaniController.Get All",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Compani"
                            }
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/company/{id}": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "get Compani by id",
                "operationId": "CompaniController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Compani"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            }
        },
        "/event/grid/{cid}": {
            "get": {
                "tags": [
                    "event"
                ],
                "description": "get Event-Data by id",
                "operationId": "EventDataController.GetOne",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/event/{cid}/{type}": {
            "get": {
                "tags": [
                    "event"
                ],
                "description": "get Event-Data by id",
                "operationId": "EventDataController.GetOne",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "type",
                        "description": "Temp Humidity WindSpeed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "create User",
                "operationId": "UserController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.LoginGoodResponse"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Client": {
            "title": "Client",
            "type": "object",
            "properties": {
                "Areas": {
                    "type": "integer",
                    "format": "int32"
                },
                "CompanyID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Contacts": {
                    "type": "string"
                },
                "DateEnd": {
                    "type": "string",
                    "format": "string"
                },
                "DateStart": {
                    "type": "string",
                    "format": "string"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "IsAccedents": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Sum": {
                    "type": "number",
                    "format": "float"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "models.Compani": {
            "title": "Compani",
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "Rating": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "models.Login": {
            "title": "Login",
            "type": "object",
            "properties": {
                "Login": {
                    "type": "string"
                },
                "PasswordHash": {
                    "type": "string"
                }
            }
        },
        "models.LoginGoodResponse": {
            "title": "LoginGoodResponse",
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.NiceClient": {
            "title": "NiceClient",
            "type": "object",
            "properties": {
                "Areas": {
                    "type": "integer",
                    "format": "int32"
                },
                "CompanyID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Contacts": {
                    "type": "string"
                },
                "DateEnd": {
                    "type": "string"
                },
                "DateStart": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "IsAccedents": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Sum": {
                    "type": "number",
                    "format": "float"
                },
                "Type": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "event",
            "description": "EventDataController operations for Event-Data\n"
        },
        {
            "name": "client",
            "description": " ClientController operations for Client\n"
        },
        {
            "name": "company",
            "description": " CompaniController operations for Compani\n"
        },
        {
            "name": "user",
            "description": " UserController operations for User\n"
        }
    ]
}